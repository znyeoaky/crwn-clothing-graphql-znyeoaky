{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/crwn-clothing-v2-graphql/src/routes/category/category.component.jsx\",\n    _s = $RefreshSig$();\n\n// import { useContext, useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ProductCard from '../../components/product-card/product-card.component'; // import { CategoriesContext } from '../../contexts/categories.context';\n\nimport { CategoryContainer, Title } from './category.styles';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const {\n    category\n  } = useParams(); // const { categoriesMap, loading } = useContext(CategoriesContext);\n\n  const [products, setProducts] = useState(categoriesMap[category]);\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: category.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n        children: products && products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"vpKi/U7uWDS1VjjohyRLPOr0gUY=\", false, function () {\n  return [useParams];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/nanye/Desktop/crwn-clothing-v2-graphql/src/routes/category/category.component.jsx"],"names":["useParams","ProductCard","CategoryContainer","Title","Spinner","gql","useQuery","Category","category","products","setProducts","useState","categoriesMap","useEffect","loading","toUpperCase","map","product","id"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,sDAAxB,C,CACA;;AACA,SAASC,iBAAT,EAA4BC,KAA5B,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAeR,SAAS,EAA9B,CADqB,CAErB;;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAACC,aAAa,CAACJ,QAAD,CAAd,CAAxC;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,WAAW,CAACE,aAAa,CAACJ,QAAD,CAAd,CAAX;AACD,GAFQ,EAEN,CAACA,QAAD,EAAWI,aAAX,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,cACGE,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEN,QAAC,QAAD;AAAA,8BACE,QAAC,KAAD;AAAA,kBAAQN,QAAQ,CAACO,WAAT;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AAAA,kBACGN,QAAQ,IACPA,QAAQ,CAACO,GAAT,CAAcC,OAAD,iBACX,QAAC,WAAD;AAA8B,UAAA,OAAO,EAAEA;AAAvC,WAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzBD;;GAAMX,Q;UACiBP,S;;;KADjBO,Q;AA2BN,eAAeA,QAAf","sourcesContent":["// import { useContext, useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ProductCard from '../../components/product-card/product-card.component';\n// import { CategoriesContext } from '../../contexts/categories.context';\nimport { CategoryContainer, Title } from './category.styles';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { gql, useQuery } from '@apollo/client';\n\nconst Category = () => {\n  const { category } = useParams();\n  // const { categoriesMap, loading } = useContext(CategoriesContext);\n  const [products, setProducts] = useState(categoriesMap[category]);\n\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n\n  return (\n    <Fragment>\n      {loading ? <Spinner /> :\n      (    \n        <Fragment>\n          <Title>{category.toUpperCase()}</Title>\n          <CategoryContainer>\n            {products &&\n              products.map((product) => (\n                <ProductCard key={product.id} product={product} />\n            ))}\n          </CategoryContainer>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}