{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/crwn-clothing-v2-graphql/src/contexts/categories.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { gql, useQuery } from '@apollo/client'; // import { getCategoriesAndDocuments } from '../utils/firebase/firebase.utils';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoriesContext = /*#__PURE__*/createContext({\n  categoriesMap: {}\n});\nconst COLLECTIONS = gql`\n  query {\n    collections{\n      id,\n      title,\n      items{\n        id,\n        name,\n        price,\n        imageUrl\n      }\n    }\n  }\n`;\nexport const CategoriesProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(COLLECTIONS);\n  const [categoriesMap, setCategoriesMap] = useState({}); // useEffect(() => {\n  //   const getCategoriesMap = async () => {\n  //     const categoryMap = await getCategoriesAndDocuments();\n  //     setCategoriesMap(categoryMap);\n  //   };\n  //   getCategoriesMap();\n  // }, []);\n\n  useEffect(() => {\n    if (data) {\n      const {\n        collections\n      } = data;\n      const collectionsMap = collections.reduce((acc, collection) => {\n        const {\n          title,\n          items\n        } = collection;\n        acc[title.toLowerCase()] = items;\n        return acc;\n      }, {});\n      setCategoriesMap(collectionsMap);\n    }\n  }, [data]);\n  console.log(\"loading: \", loading);\n  console.log(\"data: \", data);\n  const value = {\n    categoriesMap,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesProvider, \"Dl0viFZ4uY+rugd9Yk/zlUpfzyY=\", false, function () {\n  return [useQuery];\n});\n\n_c = CategoriesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesProvider\");","map":{"version":3,"sources":["/Users/nanye/Desktop/crwn-clothing-v2-graphql/src/contexts/categories.context.jsx"],"names":["createContext","useState","useEffect","gql","useQuery","CategoriesContext","categoriesMap","COLLECTIONS","CategoriesProvider","children","loading","error","data","setCategoriesMap","collections","collectionsMap","reduce","acc","collection","title","items","toLowerCase","console","log","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B,C,CACA;;;AAEA,OAAO,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC;AAC7CM,EAAAA,aAAa,EAAE;AAD8B,CAAD,CAAvC;AAIP,MAAMC,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,OAAO,MAAMK,kBAAkB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAK;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBR,QAAQ,CAACG,WAAD,CAAtC;AACA,QAAM,CAACD,aAAD,EAAgBO,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD,CAFkD,CAIlD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,IAAH,EAAQ;AACN,YAAM;AAAEE,QAAAA;AAAF,UAAkBF,IAAxB;AACA,YAAMG,cAAc,GAAGD,WAAW,CAACE,MAAZ,CAAmB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC7D,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBF,UAAzB;AACAD,QAAAA,GAAG,CAACE,KAAK,CAACE,WAAN,EAAD,CAAH,GAA2BD,KAA3B;AACA,eAAOH,GAAP;AACD,OAJsB,EAIpB,EAJoB,CAAvB;AAMAJ,MAAAA,gBAAgB,CAACE,cAAD,CAAhB;AACD;AACF,GAXQ,EAWN,CAACH,IAAD,CAXM,CAAT;AAcAU,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBb,OAAzB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,IAAtB;AAGA,QAAMY,KAAK,GAAG;AAAElB,IAAAA,aAAF;AAAiBI,IAAAA;AAAjB,GAAd;AACA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEc,KAAnC;AAAA,cACGf;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCM;;GAAMD,kB;UACmBJ,Q;;;KADnBI,kB","sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n// import { getCategoriesAndDocuments } from '../utils/firebase/firebase.utils';\n\nexport const CategoriesContext = createContext({\n  categoriesMap: {},\n});\n\nconst COLLECTIONS = gql`\n  query {\n    collections{\n      id,\n      title,\n      items{\n        id,\n        name,\n        price,\n        imageUrl\n      }\n    }\n  }\n`\n\nexport const CategoriesProvider = ({ children }) => {\n  const{loading, error, data} = useQuery(COLLECTIONS);\n  const [categoriesMap, setCategoriesMap] = useState({});\n\n  // useEffect(() => {\n  //   const getCategoriesMap = async () => {\n  //     const categoryMap = await getCategoriesAndDocuments();\n  //     setCategoriesMap(categoryMap);\n  //   };\n  //   getCategoriesMap();\n  // }, []);\n\n  useEffect(() => {\n    if(data){\n      const { collections } = data;\n      const collectionsMap = collections.reduce((acc, collection) => {\n        const { title, items } = collection;\n        acc[title.toLowerCase()] = items;\n        return acc;\n      }, {});\n      \n      setCategoriesMap(collectionsMap);\n    }\n  }, [data]);\n\n\n  console.log(\"loading: \", loading);\n  console.log(\"data: \", data);\n\n\n  const value = { categoriesMap, loading };\n  return (\n    <CategoriesContext.Provider value={value}>\n      {children}\n    </CategoriesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}